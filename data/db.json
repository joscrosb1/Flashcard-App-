{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "name": "React",
      "description": "Questions about React",
      "id": 3
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "",
      "back": "",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "cards": [],
      "front": "b",
      "back": "b",
      "deckId": 1,
      "id": 7
    },
    {
      "front": "What is the purpose of useState in React?",
      "back": "useState is a React Hook that allows us to manage state in a functional component. It takes an initial state value and returns an array with two elements: the current state value and a function to update the state.",
      "deckId": 3,
      "id": 8
    },
    {
      "front": "What is useEffect?",
      "back": "useEffect is another React Hook that lets us manage side effects in a functional component. Side effects may include fetching data from an API, updating the DOM, or setting up event listeners. useEffect takes two arguments: a callback function that runs when the component mounts, and an array of dependencies that tells React when to run the callback function again.",
      "deckId": 3,
      "id": 9
    }
  ]
}